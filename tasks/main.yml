
- name: Add OpenVPN repo GPG key
  apt_key:
    url: https://swupdate.openvpn.net/repos/repo-public.gpg
    key: E158C569
    state: present


- name: Add OpenVPN repo sources
  apt_repository:
    filename: openvpn-aptrepo
    repo: deb http://build.openvpn.net/debian/openvpn/release/{{ openvpn_version }} {{ ansible_lsb.codename }} main
    state: present


- name: Install OpenVPN
  apt: name={{item}} update_cache=yes
  with_items: ['openvpn', 'easy-rsa']


- name: Generate scripts from templates
  template: 
    src: {{item}}.j2 
    dest: '{{openvpn_etcdir}}/{{item}}'
    mode: 0700
  with_items: [vars, build-server.sh, build-client.sh, revoke-client.sh]


- name: Create group for open vpn
  group:
    name: "{{openvpn_group}}"
    system: yes
    state: present


- name: Create user for open vpn
  user:
    name: "{{openvpn_user}}"
    comment: "Open VPN"
    group: "{{openvpn_group}}"
    system: yes
    state: present
    createhome: no


- name: Generate Server keys
  command: "{{openvpn_etcdir}}/build-server.sh"
  args:
    creates: "{{ openvpn_keydir }}"


- name: Generate tls-auth key
  command: openvpn --genkey --secret {{ openvpn_tls_key }}
    chdir="{{ openvpn_keydir }}"
    creates="{{ openvpn_tls_key }}"
  args:
    creates: "{{ openvpn_keydir }}/{{ openvpn_tls_key }}"
  when: openvpn_tls_auth


- name: Check if crl.pem exists
  stat: path={{openvpn_keydir}}/crl.pem
  register: crl_pem_file


- name: Create client configuration directory if requested
  file: >
    path={{openvpn_client_config_dir}}
    mode=755
    state=directory

- name: Checking certs
  stat:
    path: "{{ openvpn_keydir }}/{{openvpn_client_prefix}}{{vpn_id}}.ovpn"
  register: keys_ex
  with_sequence: start=1 count={{openvpn_clients}}
  loop_control:
    loop_var: vpn_id
  tags: ['users']

- name: Generate Clients keys
  command: "{{openvpn_etcdir}}/build-client.sh {{openvpn_client_prefix}}{{item.vpn_id}}"
  args:
    creates: "{{ openvpn_keydir }}/{{openvpn_client_prefix}}{{item.vpn_id}}.crt"
  when: not item.stat.exists
  with_items: '{{keys_ex.results}}'
  no_log: True
  tags: ['users']


- name: Revoke Clients keys
  command: "{{openvpn_etcdir}}/revoke-client.sh {{item}}"
  args: { removes: "{{ openvpn_keydir }}/{{item}}.crt" }
  with_items: "{{ openvpn_users_revoke }}"
  tags: ['users']


- include_tasks: user_files.yml
  tags: ['users']

- name: Generating users configuration
  include_tasks: user.yml
  with_items: '{{keys_ex.results}}'
  when: not item.stat.exists
  no_log: True
  tags: ['users']

- name: Configure server
  template: 
    src: server.conf.j2 
    dest: '{{openvpn_etcdir}}/server.conf'
    force: yes
  notify: [openvpn restart]


- name: Ensure openvpn key dir has the right permission
  file: path={{openvpn_keydir}} state=directory mode=0700 owner={{openvpn_user}}


- name: Set ip forwarding in the sysctl file and reload if necessary
  sysctl: name="net.ipv4.ip_forward" value=1 sysctl_set=yes state=present reload=yes

